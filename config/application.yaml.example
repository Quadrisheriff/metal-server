# =============================================================================
# GETTING STARTED
# COPY this file into place, please leave this example as a reference.
# NOTE: Comments in the main config will be removed by the application
#
# cp config/application.yaml.example config/application.yaml
#
# The following parameters are configurable for the install. Commented out keys
# give the default values used. Uncomment the line to manually set it
# =============================================================================

# =============================================================================
# App Base URL
# Specify the base URL to where the application is being hosted. This is used
# by JSON serializers to give the correct URLs to resources
# =============================================================================
app_base_url:


# =============================================================================
# API Port
# Optional
# Switch the API to run over a port on localhost instead of a unix socket.
# The nginx config will need to be renendered. This is typically used when
# unicorn is running on port 8080
#
# To start the unicorn server with a unix socket:
# bundle exec unicorn -c /path/to/app/unicorn.rb
#
# To start the unicorn server on port 8080:
# bundle exec unicorn
# =============================================================================
# api_port: 8080

# =============================================================================
# Content Base Path
# Set the locations the internal configuration files will be stored at
# =============================================================================
content_base_path:

# =============================================================================
# NGINX Server Name
# The name given to nginx as its server name
# =============================================================================
nginx_server_name:

# =============================================================================
# Default System Dir
# The default directory to server over the nginx server. File a stored within
# sub directories according to their type. Each file type's system can be
# explicitly overridden using the <class>_system_dir config value (see below)
# =============================================================================
default_system_dir:

# =============================================================================
# Default Base Download URL
# The default download url pointing to the download server. The files are stored
# according to type with the following URI pattern:
# <base_download_url>/<type>/<filename>
# =============================================================================
base_base_download_url:

# =============================================================================
# <class> System Dir
# Override the system directory for a particular file model. The needs to be the
# string version of the ruby model being overridden. The nginx routing to this
# file type will automatically be updated next time the configs are rendered.
#
# Unlike the `default_system_dir`, the file type is not appended
# automatically
# =============================================================================
# Examples:
# Pxelinux_system_dir:
# Uefi_system_dir:
# KernelFile_system_dir:
# Initrd_system_dir:
#

