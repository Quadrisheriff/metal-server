# =============================================================================
# Reference Documentation
# This document contains the key descriptions for:
# config/application.yaml
#
# This application is configured using `Figaro`. Refer to the documentation
# for further details:
# https://github.com/laserlemon/figaro
#
# This document is for reference purposes only, setting values here will not
# configure the application.
# =============================================================================

# =============================================================================
# App Base URL
# Specify a URL where the application is being hosted. This is required for
# generating the links between models.
# =============================================================================
app_base_url:

# =============================================================================
# Content Directory
# Specify where internal configuration files will be stored. In practice this
# is limited to DHCP configs and metadata files.
# =============================================================================
content_dir:

# =============================================================================
# Log Directory
# Specify where log files will be stored. The application does not manage the
# size of these logs. Logrotate needs to be setup independently
# =============================================================================
log_dir:

# =============================================================================
# JSON Web Token Shared Secret
# Specify the shared secret used to generate and verify jwt_tokens. This value
# should be kept private as anyone with access to it can generate fraudulent
# credentials. Consider setting it in the environment instead of the
# application's config file.
# =============================================================================
jwt_shared_secret:

# =============================================================================
# DHCP Is Running Command?
# This command is used to check if DHCP is currently running. It MUST ONLY
# exit 0 if DHCP is currently running. All other exit codes are considered
# offline responses.
# =============================================================================
dhcpd_is_running_command:

# =============================================================================
# Restart DHCP Command
# This command is used to restart the DHCP server. It MUST ONLY exit 0
# if the server restarted correctly. All other exit codes are considered
# failures.
# =============================================================================
restart_dhcpd_command:

# =============================================================================
# Validate DHCP Command
# This is used to validate if the DHCP configuration is valid before the server
# is restarted. It SHOULD reject as many syntax errors as possible. It does
# not have to guarantee DHCP will restart.
#
# It MUST ONLY exit 0 if the configurations pass validation. All other exit
# codes are considered failures.
# =============================================================================
validate_dhcpd_command:

# =============================================================================
# <TYPE> System Directories
# Configure various paths to system directories. This will store the
# corresponding file in the given directory.
# =============================================================================
Dhcp_system_dir:      # Dhcp subnet and host files are stored here
Initrd_system_dir:    # Initial ram disks will be stored here
Kernel_system_dir:    # Kernels will be stored here
Kickstart_system_dir: # Kickstarts will be stored here
Legacy_system_dir:    # Legacy bios PXE files will be stored here

# =============================================================================
# Grub <type> System Directories
# Configure the grub types that are supported by the application. By default
# the 'x86_64' sub type has been configured. This type can be removed and
# replaced by any number of other subtypes. The value should specify the
# directory the PXE file will be stored in.
#
# All keys must be in the format Grub_<sub-type>_system_dir. The <sub-type>
# is encoded into the ID of each entry in the format: <sub-type>.<name>
# The `sub-type` itself must be alphanumeric and may contain `-` and `_`.
# =============================================================================
Grub_x86_64_system_dir:
Grub_ppc_system_dir:

# =============================================================================
# Named System Directories
# For named relative paths to work correctly, three configuration files are
# required.
#
# 1. Named Working Directory
# The `Named_working_dir` specifies where BIND will look for its zone files.
# It must be the same the `directory` option in the main named config.
# Usually the main config is `/etc/named.conf`
#
# 2. Named Config Directory
# The location where the subnet config files will be stored. This will
# typically be in the same directory the main `named.conf` file.
#
# 3. Named Sub Directory Name
# The `named_sub_dir` gives the relative path from the working and config
# directories. They are used to store `metal-server` specific content and
# are integral to the backup process. No other content should be stored within
# these directories.
# =============================================================================
Named_working_dir:
Named_config_dir:
Named_sub_dir:

# =============================================================================
# Named System Commands
# The following system commands are required for validating, restarting, and
# checking if named is running.
#
# 1. Named is Running Command
# The `named_is_running_` command must return a non-zero exit code if the named
# server isn't currently running. This will cause all updates to be aborted
# until such time it returns 0.
#
# 2. Named Config is Valid
# The `namedconf_is_valid_command` must return a non-zero exit code if the
# main configuration file is invalid. It may also validate that all the zone
# configuration data is valid (it does not by default). Non-zero exit codes
# will cause the update to be aborted before named is restarted.
#
# 3. Restart Named Command
# The `named_restart_command` should attempt to restart the BIND server. It
# must return a non-zero exit status if the server fails to restart. This
# will trigger the rollback procedure.
# =============================================================================
named_is_running_command:
namedconf_is_valid_command:
named_restart_command:

# =============================================================================
# Enable <TYPE>
# Used to enable/disable different services within the API. By default all
# the routes are enabled. A route can be disabled by setting the value to
# 'false'.
# =============================================================================
enable_dhcp:      # Enables the /dhcp-subnets and /dhcp-hosts routes
enable_kickstart: # Enables the /kickstarts routes
enable_netboot:   # Enables the /legacies, /grubs, and /boot-methods routes

